{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","input","setInput","result","setResult","inputHandler","event","target","value","type","onChange","name","onClick","eval","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"m0BAGMA,IAAM,SAANA,MACJ,cAA0BC,oDAAS,IAAnC,2KAAOC,MAAP,cAAcC,SAAd,cACA,WAA4BF,oDAAS,GAArC,4KAAOG,OAAP,cAAeC,UAAf,cAEMC,aAAe,SAACC,GACpBJ,SAASI,EAAMC,OAAOC,QAGxB,OACE,2EACE,gFACE,oEAAOC,KAAK,OAAOD,MAAOP,MAAOS,SAAUL,aAAcM,KAAK,UAC9D,oEACA,qEAAQC,QAAS,0BAAMR,UAAUS,KAAKZ,SAAtC,uBACA,8FAAoBE,UAEpB,qEACES,QAAS,WACPV,SAASD,MAAQ,MAFrB,eAOA,qEACEW,QAAS,WACPV,SAASD,MAAQ,MAFrB,eAOA,qEACEW,QAAS,WACPV,SAASD,MAAQ,MAFrB,eAOA,qEACEW,QAAS,WACPV,SAASD,MAAQ,MAFrB,eAOA,qEACEW,QAAS,WACPV,SAASD,MAAQ,MAFrB,eAOA,oEACA,qEACEW,QAAS,WACPV,SAASD,MAAQ,MAFrB,eAOA,qEACEW,QAAS,WACPV,SAASD,MAAQ,MAFrB,eAOA,qEACEW,QAAS,WACPV,SAASD,MAAQ,MAFrB,eAOA,qEACEW,QAAS,WACPV,SAASD,MAAQ,MAFrB,eAOA,qEACEW,QAAS,WACPV,SAASD,MAAQ,MAFrB,eAOA,oEAEA,qEACEW,QAAS,WACPV,SAASD,MAAQ,MAFrB,eAOA,qEACEW,QAAS,WACPV,SAASD,MAAQ,MAFrB,eAOA,qEACEW,QAAS,WACPV,SAASD,MAAQ,MAFrB,eAOA,qEACEW,QAAS,WACPV,SAASD,MAAQ,MAFrB,eAOA,qEACEW,QAAS,WACPV,SAAS,KAFb,uBAYOH,2B,gICxHAe,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC1B,EAAA,EAAD,MAEF2B,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.a5fbb2b1.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport \"./App.css\";\n\nconst App = () => {\n  const [input, setInput] = useState(\"\");\n  const [result, setResult] = useState(0);\n\n  const inputHandler = (event) => {\n    setInput(event.target.value);\n  };\n\n  return (\n    <div>\n      <center>\n        <input type=\"text\" value={input} onChange={inputHandler} name=\"input\" />\n        <br />\n        <button onClick={() => setResult(eval(input))}>Calculate</button>\n        <h4>The Result is: {result}</h4>\n\n        <button\n          onClick={() => {\n            setInput(input + \"1\");\n          }}\n        >\n          1\n        </button>\n        <button\n          onClick={() => {\n            setInput(input + \"2\");\n          }}\n        >\n          2\n        </button>\n        <button\n          onClick={() => {\n            setInput(input + \"3\");\n          }}\n        >\n          3\n        </button>\n        <button\n          onClick={() => {\n            setInput(input + \"4\");\n          }}\n        >\n          4\n        </button>\n        <button\n          onClick={() => {\n            setInput(input + \"5\");\n          }}\n        >\n          5\n        </button>\n        <br />\n        <button\n          onClick={() => {\n            setInput(input + \"6\");\n          }}\n        >\n          6\n        </button>\n        <button\n          onClick={() => {\n            setInput(input + \"7\");\n          }}\n        >\n          7\n        </button>\n        <button\n          onClick={() => {\n            setInput(input + \"8\");\n          }}\n        >\n          8\n        </button>\n        <button\n          onClick={() => {\n            setInput(input + \"9\");\n          }}\n        >\n          9\n        </button>\n        <button\n          onClick={() => {\n            setInput(input + \"0\");\n          }}\n        >\n          0\n        </button>\n        <br />\n\n        <button\n          onClick={() => {\n            setInput(input + \"+\");\n          }}\n        >\n          +\n        </button>\n        <button\n          onClick={() => {\n            setInput(input + \"-\");\n          }}\n        >\n          -\n        </button>\n        <button\n          onClick={() => {\n            setInput(input + \"*\");\n          }}\n        >\n          *\n        </button>\n        <button\n          onClick={() => {\n            setInput(input + \"/\");\n          }}\n        >\n          /\n        </button>\n        <button\n          onClick={() => {\n            setInput(\"\");\n          }}\n        >\n          CLR\n        </button>\n      </center>\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}